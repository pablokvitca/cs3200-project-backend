---
swagger: "2.0"
info:
  description: "This a API for the ClassDeck Project. Used for communication between\
    \ front-end and back-end.\n"
  version: "1.0.0"
  title: "ClassDeck Project"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "kvitca.p@husky.neu.edu"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "virtserver.swaggerhub.com"
basePath: "/pablokvitca/classdeck-api/1.0.0"
tags:
- name: "attribute"
  description: "Everything about attribute"
- name: "class"
  description: "Everything about class"
- name: "class_attribute"
  description: "Everything about class_attribute"
- name: "class_prereq_group"
  description: "Everything about class_prereq_group"
- name: "college"
  description: "Everything about college"
- name: "degree"
  description: "Everything about degree"
- name: "degree_prereq_group"
  description: "Everything about degree_prereq_group"
- name: "department"
  description: "Everything about department"
- name: "prereq"
  description: "Everything about prereq"
- name: "pursued_degree"
  description: "Everything about pursued_degree"
- name: "schedule_option"
  description: "Everything about schedule_option"
- name: "schedule_option_section"
  description: "Everything about schedule_option_section"
- name: "section"
  description: "Everything about section"
- name: "section_meeting_time"
  description: "Everything about section_meeting_time"
- name: "section_restriction"
  description: "Everything about section_restriction"
- name: "semester"
  description: "Everything about semester"
- name: "student"
  description: "Everything about student"
- name: "student_taken_classes"
  description: "Everything about student_taken_classes"
schemes:
- "https"
- "http"
paths:
  /attribute:
    get:
      tags:
      - "attribute"
      summary: "List all attributes"
      description: "Returns all attributes"
      operationId: "list_attributes"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
      x-swagger-router-controller: "swagger_server.controllers.attribute_controller"
  /attribute/{attribute_name}:
    get:
      tags:
      - "attribute"
      summary: "Find attribute by name"
      description: "Returns a single attribute"
      operationId: "get_attribute_by_name"
      produces:
      - "application/json"
      parameters:
      - name: "attribute_name"
        in: "path"
        description: "name of attribute to return"
        required: true
        type: "string"
        maxLength: 255
        minLength: 1
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Attribute"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Attribute not found"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.attribute_controller"
  /class:
    get:
      tags:
      - "class"
      summary: "List all classes"
      description: "Returns all classes"
      operationId: "list_classes"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
      x-swagger-router-controller: "swagger_server.controllers.class_controller"
  /class/filtered:
    get:
      tags:
      - "class"
      summary: "List all classes filtered"
      operationId: "list_classes_filtered"
      produces:
      - "application/json"
      responses:
        405:
          description: "Invalid input"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.class_controller"
  /class/{class_department}/{class_number}:
    get:
      tags:
      - "class"
      summary: "Find class by ID"
      description: "Returns a single class"
      operationId: "get_class_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "class_department"
        in: "path"
        description: "short code of the department that offers the class to return"
        required: true
        type: "string"
        maxLength: 5
        minLength: 2
      - name: "class_number"
        in: "path"
        description: "class number of the class to return"
        required: true
        type: "integer"
        maximum: 9999
        minimum: 0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Class"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Class not found"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.class_controller"
  /class_attribute/{class_department}/{class_number}:
    get:
      tags:
      - "class_attribute"
      summary: "Lists attributes for the given class"
      description: "Returns a attributes for the given class"
      operationId: "get_class_attributes"
      produces:
      - "application/json"
      parameters:
      - name: "class_department"
        in: "path"
        description: "short code of the Department related to the Class related to\
          \ the ClassAttribute to return"
        required: true
        type: "string"
        maxLength: 5
        minLength: 2
      - name: "class_number"
        in: "path"
        description: "number of the Class related to the ClassAttribute to return"
        required: true
        type: "integer"
        maximum: 9999
        minimum: 0
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid Class supplied"
        404:
          description: "Class not found"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.class_attribute_controller"
  /class_prereq_group/{class_department}/{class_number}:
    get:
      tags:
      - "class_prereq_group"
      summary: "Lists prereqs for the given class"
      description: "Returns a prereqs for the given class"
      operationId: "get_class_prereqs"
      produces:
      - "application/json"
      parameters:
      - name: "class_department"
        in: "path"
        description: "short code of the Department related to the Class related to\
          \ the ClassPrereqGroup to return"
        required: true
        type: "string"
        maxLength: 5
        minLength: 2
      - name: "class_number"
        in: "path"
        description: "number of the Class related to the ClassPrereqGroup to return"
        required: true
        type: "integer"
        maximum: 9999
        minimum: 0
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid Class supplied"
        404:
          description: "Class not found"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.class_prereq_group_controller"
  /class_prereq_group/{class_prereq_group_id}:
    get:
      tags:
      - "class_prereq_group"
      summary: "Find class_prereq_group by ID"
      description: "Returns a single class_prereq_group"
      operationId: "get_class_prereq_group_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "class_prereq_group_id"
        in: "path"
        description: "ID of class_prereq_group to return"
        required: true
        type: "integer"
        minimum: 0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ClassPrereqGroup"
        400:
          description: "Invalid ID supplied"
        404:
          description: "ClassPrereqGroup not found"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.class_prereq_group_controller"
  /college:
    get:
      tags:
      - "college"
      summary: "List all colleges"
      description: "Returns all colleges"
      operationId: "list_colleges"
      produces:
      - "application/json"
      parameters:
      - name: "college_id"
        in: "path"
        description: "ID of college to return"
        required: true
        type: "integer"
        minimum: 0
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid ID supplied"
        404:
          description: "College not found"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.college_controller"
  /college/{college_id}:
    get:
      tags:
      - "college"
      summary: "Find college by ID"
      description: "Returns a single college"
      operationId: "get_college_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "college_id"
        in: "path"
        description: "ID of college to return"
        required: true
        type: "integer"
        minimum: 0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/College"
        400:
          description: "Invalid ID supplied"
        404:
          description: "College not found"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.college_controller"
  /degree:
    get:
      tags:
      - "degree"
      summary: "List all degrees"
      operationId: "list_degrees"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful operation"
        405:
          description: "Error"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.degree_controller"
    post:
      tags:
      - "degree"
      summary: "Add a degree to the classdeck"
      operationId: "add_degree"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Degree object that needs to be added to the system"
        required: true
        schema:
          $ref: "#/definitions/Degree"
      responses:
        405:
          description: "Invalid input"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.degree_controller"
  /degree/by_college/{college_id}:
    get:
      tags:
      - "degree"
      summary: "List all degrees in the given college"
      operationId: "list_degrees_by_college"
      produces:
      - "application/json"
      parameters:
      - name: "college_id"
        in: "path"
        description: "ID of college related to the degrees to return"
        required: true
        type: "integer"
        minimum: 0
      responses:
        200:
          description: "Successful operation"
        405:
          description: "Error"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.degree_controller"
  /degree/{degree_id}:
    get:
      tags:
      - "degree"
      summary: "Find degree by ID"
      description: "Returns a single degree"
      operationId: "get_degree_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "degree_id"
        in: "path"
        description: "ID of degree to return"
        required: true
        type: "integer"
        minimum: 0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Degree"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Degree not found"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.degree_controller"
    delete:
      tags:
      - "degree"
      summary: "Deletes a degree"
      operationId: "delete_degree"
      produces:
      - "application/json"
      parameters:
      - name: "degree_id"
        in: "path"
        description: "Degree id to delete"
        required: true
        type: "integer"
        minimum: 0
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Degree not found"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.degree_controller"
  /degree/list_prereqsites/{degree_id}:
    get:
      tags:
      - "degree"
      summary: "List the prereqs for a given degree"
      operationId: "degree_list_prereqs"
      produces:
      - "application/json"
      parameters:
      - name: "degree_id"
        in: "path"
        description: "Degree id to delete"
        required: true
        type: "integer"
        minimum: 0
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Degree not found"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.degree_controller"
  /degree_prereq_group:
    post:
      tags:
      - "degree_prereq_group"
      summary: "Add a degree_prereq_group to the classdeck"
      operationId: "add_degree_prereq_group"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "DegreePrereqGroup object that needs to be added to the system"
        required: true
        schema:
          $ref: "#/definitions/DegreePrereqGroup"
      responses:
        405:
          description: "Invalid input"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.degree_prereq_group_controller"
    put:
      tags:
      - "degree_prereq_group"
      summary: "Update an existing degree_prereq_group"
      operationId: "update_degree_prereq_group"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "DegreePrereqGroup object that needs to be updated in the system"
        required: true
        schema:
          $ref: "#/definitions/DegreePrereqGroup"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "DegreePrereqGroup not found"
        405:
          description: "Validation exception"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.degree_prereq_group_controller"
  /degree_prereq_group/{degree_prereq_group_id}:
    get:
      tags:
      - "degree_prereq_group"
      summary: "Find degree_prereq_group by ID"
      description: "Returns a single degree_prereq_group"
      operationId: "get_degree_prereq_group_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "degree_prereq_group_id"
        in: "path"
        description: "ID of degree_prereq_group to return"
        required: true
        type: "integer"
        minimum: 0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/DegreePrereqGroup"
        400:
          description: "Invalid ID supplied"
        404:
          description: "DegreePrereqGroup not found"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.degree_prereq_group_controller"
    delete:
      tags:
      - "degree_prereq_group"
      summary: "Deletes a degree_prereq_group"
      operationId: "delete_degree_prereq_group"
      produces:
      - "application/json"
      parameters:
      - name: "degree_prereq_group_id"
        in: "path"
        description: "DegreePrereqGroup id to delete"
        required: true
        type: "integer"
        minimum: 0
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "DegreePrereqGroup not found"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.degree_prereq_group_controller"
  /department:
    get:
      tags:
      - "department"
      summary: "List all departments"
      operationId: "list_department"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful operation"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.department_controller"
  /department/{department_short_code}:
    get:
      tags:
      - "department"
      summary: "Find department by short code"
      description: "Returns a single department"
      operationId: "get_department_by_short_code"
      produces:
      - "application/json"
      parameters:
      - name: "department_short_code"
        in: "path"
        description: "short code of department to return"
        required: true
        type: "string"
        maxLength: 5
        minLength: 2
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Department"
        400:
          description: "Invalid short code supplied"
        404:
          description: "Department not found"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.department_controller"
  /pursued_degree:
    post:
      tags:
      - "pursued_degree"
      summary: "Add a pursued_degree to the classdeck"
      operationId: "add_pursued_degree"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "PursuedDegree object that needs to be added to the system"
        required: true
        schema:
          $ref: "#/definitions/PursuedDegree"
      responses:
        405:
          description: "Invalid input"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.pursued_degree_controller"
  /pursued_degree/{nuid}:
    get:
      tags:
      - "pursued_degree"
      summary: "List pursued_degree by NUID"
      description: "Returns the pursued_degrees related to the given NUID"
      operationId: "get_pursued_degree_by_nuid"
      produces:
      - "application/json"
      parameters:
      - name: "nuid"
        in: "path"
        description: "nuid of the user related to the pursued_degree to return"
        required: true
        type: "integer"
        minimum: 0
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid ID supplied"
        404:
          description: "PursuedDegree not found"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.pursued_degree_controller"
  /pursued_degree/{nuid}/{degree_id}:
    delete:
      tags:
      - "pursued_degree"
      summary: "Deletes a pursued_degree"
      operationId: "delete_pursued_degree"
      produces:
      - "application/json"
      parameters:
      - name: "nuid"
        in: "path"
        description: "nuid of the user related to the pursued_degree to return"
        required: true
        type: "integer"
        minimum: 0
      - name: "degree_id"
        in: "path"
        description: "nuid of the degree related to the pursued_degree to return"
        required: true
        type: "integer"
        minimum: 0
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "PursuedDegree not found"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.pursued_degree_controller"
  /schedule_option/list_by_student/{nuid}:
    get:
      tags:
      - "schedule_option"
      summary: "List schedule_option by NUID"
      description: "Returns the schedule_options related to the given NUID"
      operationId: "get_schedule_option_by_nuid"
      produces:
      - "application/json"
      parameters:
      - name: "nuid"
        in: "path"
        description: "nuid of the user related to the schedule_option to return"
        required: true
        type: "integer"
        minimum: 0
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid ID supplied"
        404:
          description: "PursuedDegree not found"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.schedule_option_controller"
  /schedule_option:
    post:
      tags:
      - "schedule_option"
      summary: "Add a schedule_option to the classdeck"
      operationId: "add_schedule_option"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          type: object
      responses:
        405:
          description: "Invalid input"
      security:
      - classdeck_auth: []
      x-swagger-router-controller: "swagger_server.controllers.schedule_option_controller"
  /schedule_option/{schedule_option_id}:
    delete:
      tags:
      - "schedule_option"
      summary: "Deletes a schedule_option"
      operationId: "delete_schedule_option"
      produces:
      - "application/json"
      parameters:
      - name: "schedule_option_id"
        in: "path"
        description: "ScheduleOption id to delete"
        required: true
        type: "integer"
        minimum: 0
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "ScheduleOption not found"
      security:
      - classdeck_auth: []
      x-swagger-router-controller: "swagger_server.controllers.schedule_option_controller"
  /schedule_option_section:
    post:
      tags:
      - "schedule_option_section"
      summary: "Add a schedule_option_section to the classdeck"
      operationId: "add_schedule_option_section"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "ScheduleOptionSection object that needs to be added to the system"
        required: true
        schema:
          $ref: "#/definitions/ScheduleOptionSection"
      responses:
        405:
          description: "Invalid input"
      security:
      - classdeck_auth: []
      x-swagger-router-controller: "swagger_server.controllers.schedule_option_section_controller"
  /schedule_option_section/{schedule_id}/{crn}:
    delete:
      tags:
      - "schedule_option_section"
      summary: "Deletes a schedule_option_section"
      operationId: "delete_schedule_option_section"
      produces:
      - "application/json"
      parameters:
      - name: "schedule_id"
        in: "path"
        description: "ID of the schedule related to the schedule_option_section to\
          \ return"
        required: true
        type: "integer"
        minimum: 0
      - name: "crn"
        in: "path"
        description: "crn of the section related to the schedule_option_section to\
          \ return"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 0
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "ScheduleOptionSection not found"
      security:
      - classdeck_auth: []
      x-swagger-router-controller: "swagger_server.controllers.schedule_option_section_controller"
  /section:
    get:
      tags:
      - "section"
      summary: "Lists all sections"
      operationId: "list_sections"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful operation"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.section_controller"
  /section/filtered/{sch_opt_id}:
    get:
      tags:
      - "section"
      summary: "Returns a filtered list of sections"
      operationId: "list_sections_filtered"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "sch_opt_id"
        in: "path"
        description: "sch_opt_id of the schedule_option to filter by"
        required: true
        type: "integer"
        minimum: 0
      responses:
        405:
          description: "Invalid input"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.section_controller"
  /section/{crn}:
    get:
      tags:
      - "section"
      summary: "Find section by"
      description: "Returns a single section"
      operationId: "get_section_by_crn"
      produces:
      - "application/json"
      parameters:
      - name: "crn"
        in: "path"
        description: "CRN of section to return"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Section"
        400:
          description: "Invalid CRN supplied"
        404:
          description: "Section not found"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.section_controller"
  /semester:
    get:
      tags:
      - "semester"
      summary: "Lists all semesters"
      description: "Lists all semesters"
      operationId: "list_semesters"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
      security:
      - internal_auth: []
      x-swagger-router-controller: "swagger_server.controllers.semester_controller"
  /student:
    post:
      tags:
      - "student"
      summary: "Create student"
      description: "This can only be done by the logged in student."
      operationId: "create_student"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created student object"
        required: true
        schema:
          $ref: "#/definitions/Student"
      responses:
        default:
          description: "successful operation"
      x-swagger-router-controller: "swagger_server.controllers.student_controller"
  /student/loggedin:
    get:
      tags:
        - "student"
      summary: "Returns the currently logged in student"
      operationId: "logged_in_student_data"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation."
        400:
          description: "User not logged in."
      x-swagger-router-controller: "swagger_server.controllers.student_controller"
  /student/login:
    get:
      tags:
      - "student"
      summary: "Logs student into the system"
      operationId: "login_student"
      produces:
      - "application/json"
      parameters:
      - name: "nuid"
        in: "query"
        description: "The nuid for login"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "The password for login in clear text"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the student"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
          schema:
            type: "string"
        400:
          description: "Invalid nuid/password supplied"
      x-swagger-router-controller: "swagger_server.controllers.student_controller"
  /student/logout:
    get:
      tags:
      - "student"
      summary: "Logs out current logged in student session"
      operationId: "logout_student"
      produces:
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
      x-swagger-router-controller: "swagger_server.controllers.student_controller"
  /student/{nuid}:
    get:
      tags:
      - "student"
      summary: "Get student by nuid"
      operationId: "get_student_by_nuid"
      produces:
      - "application/json"
      parameters:
      - name: "nuid"
        in: "path"
        description: "The name that needs to be fetched. Use student1 for testing."
        required: true
        type: "integer"
        minimum: 1
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Student"
        400:
          description: "Invalid nuid supplied"
        404:
          description: "Student not found"
      security:
      - classdeck_auth: []
      x-swagger-router-controller: "swagger_server.controllers.student_controller"
    put:
      tags:
      - "student"
      summary: "Updated student"
      description: "This can only be done by the logged in student."
      operationId: "update_student"
      produces:
      - "application/json"
      parameters:
      - name: "nuid"
        in: "path"
        description: "nuid that need to be updated"
        required: true
        type: "integer"
        minimum: 1
      - in: "body"
        name: "body"
        description: "Updated student object"
        required: true
        schema:
          $ref: "#/definitions/Student"
      responses:
        400:
          description: "Invalid student supplied"
        404:
          description: "Student not found"
      security:
      - classdeck_auth: []
      x-swagger-router-controller: "swagger_server.controllers.student_controller"
    delete:
      tags:
      - "student"
      summary: "Delete student"
      description: "This can only be done by the logged in student."
      operationId: "delete_student"
      produces:
      - "application/json"
      parameters:
      - name: "nuid"
        in: "path"
        description: "The nuid that needs to be deleted"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid nuid supplied"
        404:
          description: "Student not found"
      security:
      - classdeck_auth: []
      x-swagger-router-controller: "swagger_server.controllers.student_controller"
  /student_taken_classes:
    post:
      tags:
      - "student_taken_classes"
      summary: "Add a student_taken_classes to the classdeck"
      operationId: "add_student_taken_classes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "StudentTakenClasses object that needs to be added to the system"
        required: true
        schema:
          $ref: "#/definitions/StudentTakenClasses"
      responses:
        405:
          description: "Invalid input"
      security:
      - classdeck_auth: []
      x-swagger-router-controller: "swagger_server.controllers.student_taken_classes_controller"
    put:
      tags:
      - "student_taken_classes"
      summary: "Update an existing student_taken_classes"
      operationId: "update_student_taken_classes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "StudentTakenClasses object that needs to be updated in the system"
        required: true
        schema:
          $ref: "#/definitions/StudentTakenClasses"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "StudentTakenClasses not found"
        405:
          description: "Validation exception"
      security:
      - classdeck_auth: []
      x-swagger-router-controller: "swagger_server.controllers.student_taken_classes_controller"
  /student_taken_classes/{nuid}:
    get:
      tags:
      - "student_taken_classes"
      summary: "Finds  student_taken_classes by NUID"
      description: "Returns a list student_taken_classes"
      operationId: "get_student_taken_classes_by_nuid"
      produces:
      - "application/json"
      parameters:
      - name: "nuid"
        in: "path"
        description: "nuid of the student related to the student_taken_classes to return"
        required: true
        type: "integer"
        minimum: 1
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid ID supplied"
        404:
          description: "StudentTakenClasses not found"
      security:
        - classdeck_auth: []
      x-swagger-router-controller: "swagger_server.controllers.student_taken_classes_controller"
  /student_taken_classes/{nuid}/{class_dept}/{class_number}:
    delete:
      tags:
      - "student_taken_classes"
      summary: "Deletes a student_taken_classes"
      operationId: "delete_student_taken_classes"
      produces:
      - "application/json"
      parameters:
      - name: "nuid"
        in: "path"
        description: "nuid of the student related to the student_taken_classes to\
          \ return"
        required: true
        type: "integer"
        minimum: 0
      - name: "class_dept"
        in: "path"
        description: "short code of the department of the class related to the student_taken_classes\
          \ to return"
        required: true
        type: "string"
        maxLength: 5
        minLength: 2
      - name: "class_number"
        in: "path"
        description: "number of the class related to the student_taken_classes to\
          \ return"
        required: true
        type: "integer"
        maximum: 9999
        minimum: 0
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "StudentTakenClasses not found"
      security:
      - classdeck_auth: []
      x-swagger-router-controller: "swagger_server.controllers.student_taken_classes_controller"
securityDefinitions:
  classdeck_auth:
    type: "basic"
    x-basicInfoFunc: "app.basic_auth"
  internal_auth:
    type: "apiKey"
    name: "internal_auth"
    in: "header"
definitions:
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
  Attribute:
    type: "object"
    properties:
      name:
        type: "string"
        minLength: 0
        maxLength: 255
      nupath:
        type: "boolean"
    example:
      name: "Example Attribute"
      nupath: false
  Class:
    type: "object"
    properties:
      department:
        type: "string"
        minLength: 2
        maxLength: 5
      class_number:
        type: "integer"
        format: "int32"
      class_level:
        type: "string"
        description: "level at which the class is offered"
        enum:
        - "Undergraduate"
        - "Graduate"
      name:
        type: "string"
        minLength: 0
        maxLength: 255
      description:
        type: "string"
        minLength: 0
      credit_hours:
        type: "integer"
        format: "int32"
    example:
      department: "XX"
      class_number: 0
      class_level: "Undergraduate"
      name: "Example Class"
      description: "This is an example class"
      credit_hours: 0
  ClassAttribute:
    type: "object"
    properties:
      attr_name:
        type: "string"
        minLength: 0
        maxLength: 255
      class_dept:
        type: "string"
        minLength: 2
        maxLength: 5
      class_number:
        type: "integer"
        format: "int32"
    example:
      attr_name: "Example Attribute"
      class_dept: "XX"
      class_number: 0
  ClassPrereqGroup:
    type: "object"
    properties:
      group_id:
        type: "integer"
        minimum: 1
      min_fulfilled_req:
        type: "integer"
        minimum: 1
      class_dept:
        type: "string"
        minLength: 2
        maxLength: 5
      class_number:
        type: "integer"
        minimum: 0
        maximum: 9999
    example:
      group_id: 1
      min_fulfilled_req: 1
      class_dept: "XX"
      class_nunber: 9999
  College:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        minimum: 1
      name:
        type: "string"
        minLength: 0
        maxLength: 255
    example:
      id: 1
      name: "College of Examples"
  Degree:
    type: "object"
    properties:
      id:
        type: "integer"
        minimum: 1
      name:
        type: "string"
        minLength: 0
        maxLength: 255
      college_ID:
        type: "integer"
        minimum: 1
      type:
        type: "string"
        description: "degree type"
        enum:
        - "Major"
        - "Minor"
        - "Combined"
    example:
      id: 1
      name: "Major in Examples"
      colleg_ID: 1
      type: "Major"
  DegreePrereqGroup:
    type: "object"
    properties:
      group_id:
        type: "integer"
        minimum: 1
      min_fulfilled_req:
        type: "integer"
        minimum: 1
      degree_id:
        type: "integer"
        minimum: 1
    example:
      group_id: 1
      min_fulfilled_req: 1
      degree_id: 1
  Department:
    type: "object"
    properties:
      short_code:
        type: "string"
        minLength: 2
        maxLength: 5
      long_name:
        type: "string"
        minLength: 0
        maxLength: 255
      college:
        type: "integer"
        minimum: 1
    example:
      short_code: "XX"
      long_name: "Department of Examples"
      college: 1
  Prereq:
    type: "object"
    properties:
      prereq_group_id:
        type: "integer"
        minimum: 1
      class_dept:
        type: "string"
        minLength: 2
        maxLength: 5
      class_number:
        type: "integer"
        minimum: 0
        maximum: 9999
    example:
      prereq_group_id: 1
      class_dept: "XX"
      class_number: 9999
  PursuedDegree:
    type: "object"
    properties:
      nuid:
        type: "integer"
        minimum: 1
      degree_id:
        type: "integer"
        minimum: 1
    example:
      nuid: 1
      degree_id: 1
  ScheduleOption:
    type: "object"
    properties:
      schedule_id:
        type: "integer"
        format: "int64"
      nuid:
        type: "integer"
        format: "int64"
      semester:
        type: "string"
        description: "a semester offered during a year"
      title:
        type: "string"
    example:
      schedule_id: 1
      nuid: 1
      semester: "fall"
      title: "EXAMPLE AGVJAKG"
  ScheduleOptionSection:
    type: "object"
    properties:
      schedule_id:
        type: "integer"
        minimum: 0
      crn:
        type: "integer"
        minimum: 0
        maximum: 99999
    example:
      schedule_id: 1
      crn: 11111
  Section:
    type: "object"
    properties:
      crn:
        type: "integer"
        minimum: 0
        maximum: 99999
      class_dept:
        type: "string"
        minLength: 2
        maxLength: 5
      class_number:
        type: "integer"
        minimum: 9
        maximum: 9999
      semester_offered:
        type: "string"
        description: "the semester (of a year) during which the section is offered"
        enum:
        - "fall"
        - "spring"
        - "summer 1"
        - "summer 2"
        - "full summer"
      professor:
        type: "string"
        minLength: 0
        maxLength: 255
      capacity:
        type: "integer"
        minimum: 0
      registered:
        type: "integer"
        minimum: 0
    example:
      crn: 11111
      class_dept: "XX"
      class_number: 9999
      semester_offered: "fall"
      professor: "Ben"
      capacity: 87
      registered: 0
  SectionMeetingTime:
    type: "object"
    properties:
      crn:
        type: "integer"
        minimum: 0
        maximum: 99999
      start_time:
        type: "string"
        format: "time"
        pattern: "^[0123]{1}[\\d]{1}[:]{1}[012345]{1}[\\d]{1}$"
        x-regex: "^[0123]{1}[\\\\d]{1}[:]{1}[012345]{1}[\\\\d]{1}$"
        x-modifiers: []
      end_time:
        type: "string"
        format: "time"
        pattern: "^[0123]{1}[\\d]{1}[:]{1}[012345]{1}[\\d]{1}$"
        x-regex: "^[0123]{1}[\\\\d]{1}[:]{1}[012345]{1}[\\\\d]{1}$"
        x-modifiers: []
      meeting_days:
        type: "string"
        pattern: "^[01]{7}$"
        x-regex: "^[01]{7}$"
        x-modifiers: []
    example:
      crn: 11111
      start_time: "13:35"
      end_time: "14:40"
      meeting_days: "0101100"
  SectionRestriction:
    type: "object"
    properties:
      type:
        type: "string"
        minLength: 0
        maxLength: 255
      crn:
        type: "integer"
        minimum: 0
        maximum: 99999
    example:
      type: "Example Restriction"
      crn: 11111
  Semester:
    type: "object"
    properties:
      semester:
        type: "string"
        description: "a semester offered during a year"
        enum:
        - "fall"
        - "spring"
        - "summer 1"
        - "summer 2"
        - "full summer"
      year:
        type: "integer"
        minimum: 2000
        maximum: 3000
    example:
      semester: "fall"
      year: 2019
  Student:
    type: "object"
    properties:
      nuid:
        type: "integer"
        minimum: 1
      email:
        type: "string"
        format: "email"
        minLength: 3
        maxLength: 255
      name:
        type: "string"
        minLength: 0
        maxLength: 255
      password:
        type: "string"
        format: "password"
        minLength: 16
    example:
      nuid: 1
      email: "example@example.com"
      name: "Examples Student"
      password: "ExampleExampleExample"
  StudentTakenClasses:
    type: "object"
    properties:
      nuid:
        type: "integer"
        minimum: 1
      class_dept:
        type: "string"
        minLength: 2
        maxLength: 5
      class_number:
        type: "integer"
        minimum: 0
        maximum: 9999
      transferred:
        type: "boolean"
      current:
        type: "boolean"
    example:
      nuid: 1
      class_dept: "XX"
      class_number: 9999
      transferred: false
      current: false
